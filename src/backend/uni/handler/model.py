#!/usr/bin/env python3

"""
uni.handler.model
"""
from __future__ import annotations
from typing import Any, Optional
from pydantic import BaseModel, Field

from ..utils import timestamp_factory


class StreamError(BaseModel):
    """
    StreamError is a model that represents an error occurring in a stream.

    Attributes:
        status (int): The HTTP status code associated with the error.
        text (str): A brief message describing the error.
        detail (Any): Additional details about the error.
    """
    status: int
    text: str
    detail: Any


class StreamChunk(BaseModel):
    """
    StreamChunk is a model representing a chunk of streaming data.
    Attributes:
        timestamp (int): The timestamp of the chunk, generated by the timestamp_factory.
        data (Any): The actual data contained in the chunk.
        error (Optional[StreamError]): An optional error associated with the chunk.
    """
    timstamp: int = Field(default_factory=timestamp_factory)
    data: Any
    error: Optional[StreamError] = None


if __name__ == "__main__": exit()